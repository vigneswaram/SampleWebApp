<?xml version="1.0" encoding="UTF-8"?>

<project name="Sample" default="dist" basedir=".">
  <description>
    sample example build file
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>
  <property name="lib" value="./src/lib"/>
	<path id="classpath">
		<fileset dir="${lib}" includes="*.jar"/>
		 <pathelement location="."/>
		
	</path>
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
     <mkdir dir="${dist}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpathref="classpath"/>
  	 
  </target>

  <target name="dist" depends="clean,compile,unit-test-1"
        description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the Sample.war file -->
    <war warfile="${dist}/lib/Sample.war" basedir="${build}" needxmlfile='false'/>
  </target>

  <target name="clean"
        description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
	<target name="unit-test-1" >

				<echo message= "Testing ..."/>
				<junit printsummary="yes" haltonfailure="yes" showoutput="yes" failureproperty="test.failed" >
					<classpath>
						<pathelement path ="${build}" />
						<fileset dir="${lib}">
							<include name="*.jar"/>
						</fileset>
					</classpath> 
					 <formatter type="xml"/>
						<formatter type="plain"/>
				    <test name="test.HelloTest" /> 
				</junit>
		<fail message="Test failure detected, check test results." if="test.failed" />


	</target>
</project>